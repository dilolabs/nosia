<div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8" data-controller="mcp-server">
  <%# Header %>
  <div class="mb-6">
    <div class="flex items-center justify-between mb-4">
      <div class="flex items-center gap-4">
        <h1 class="text-2xl font-bold text-gray-900 dark:text-gray-100"><%= @mcp_server.name %></h1>

        <%# Status badge %>
        <% case @mcp_server.status %>
        <% when "ready" %>
          <span class="inline-flex items-center gap-1.5 rounded-full bg-green-100 px-3 py-1 text-sm font-medium text-green-800 dark:bg-green-900/30 dark:text-green-400">
            <span class="h-2 w-2 rounded-full bg-green-600"></span>
            Prêt
          </span>
        <% when "error" %>
          <span class="inline-flex items-center gap-1.5 rounded-full bg-red-100 px-3 py-1 text-sm font-medium text-red-800 dark:bg-red-900/30 dark:text-red-400">
            <span class="h-2 w-2 rounded-full bg-red-600"></span>
            Erreur
          </span>
        <% when "connecting" %>
          <span class="inline-flex items-center gap-1.5 rounded-full bg-yellow-100 px-3 py-1 text-sm font-medium text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-400">
            <span class="h-2 w-2 rounded-full bg-yellow-600 animate-pulse"></span>
            Connexion en cours
          </span>
        <% else %>
          <span class="inline-flex items-center gap-1.5 rounded-full bg-gray-100 px-3 py-1 text-sm font-medium text-gray-800 dark:bg-gray-900/30 dark:text-gray-400">
            <span class="h-2 w-2 rounded-full bg-gray-600"></span>
            Déconnecté
          </span>
        <% end %>

        <% if @mcp_server.latency_ms %>
          <span class="text-sm text-gray-500 dark:text-gray-400">
            <%= @mcp_server.latency_ms %>ms
          </span>
        <% end %>
      </div>

      <div class="flex gap-2">
        <% if @mcp_server.status_ready? %>
          <%= button_to "Déconnecter", disconnect_mcp_server_path(@mcp_server), method: :post, class: "rounded-lg bg-orange-600 hover:bg-orange-700 px-4 py-2 text-sm font-semibold text-white shadow-sm transition-colors" %>
        <% else %>
          <%= button_to "Connecter", connect_mcp_server_path(@mcp_server), method: :post, class: "rounded-lg bg-green-600 hover:bg-green-700 px-4 py-2 text-sm font-semibold text-white shadow-sm transition-colors" %>
        <% end %>
        <%= button_to "Tester", test_connection_mcp_server_path(@mcp_server), method: :post, data: { turbo: false }, class: "rounded-lg bg-blue-600 hover:bg-blue-700 px-4 py-2 text-sm font-semibold text-white shadow-sm transition-colors" %>
        <%= link_to "Modifier", edit_mcp_server_path(@mcp_server), class: "rounded-lg bg-gray-200 dark:bg-neutral-700 hover:bg-gray-300 dark:hover:bg-neutral-600 px-4 py-2 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm transition-colors" %>
      </div>
    </div>

    <% if @mcp_server.last_error.present? %>
      <div class="rounded-lg bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 p-4">
        <p class="text-sm font-medium text-red-800 dark:text-red-400">Dernière erreur :</p>
        <p class="text-sm text-red-700 dark:text-red-300 mt-1"><%= @mcp_server.last_error %></p>
      </div>
    <% end %>
  </div>

  <%# Tabs %>
  <div class="border-b border-gray-200 dark:border-neutral-700 mb-6">
    <nav class="-mb-px flex space-x-8">
      <a href="#overview" data-action="click->mcp-server#showTab" data-tab="overview" class="mcp-tab active whitespace-nowrap border-b-2 border-green-500 py-4 px-1 text-sm font-medium text-green-600 dark:text-green-400">
        Overview
      </a>
      <a href="#tools" data-action="click->mcp-server#showTab" data-tab="tools" class="mcp-tab whitespace-nowrap border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300">
        Tools <span class="ml-2 rounded-full bg-gray-100 dark:bg-neutral-800 px-2 py-0.5 text-xs"><%= @tools.size %></span>
      </a>
      <a href="#prompts" data-action="click->mcp-server#showTab" data-tab="prompts" class="mcp-tab whitespace-nowrap border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300">
        Prompts <span class="ml-2 rounded-full bg-gray-100 dark:bg-neutral-800 px-2 py-0.5 text-xs"><%= @prompts.size %></span>
      </a>
      <a href="#resources" data-action="click->mcp-server#showTab" data-tab="resources" class="mcp-tab whitespace-nowrap border-b-2 border-transparent py-4 px-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300">
        Resources <span class="ml-2 rounded-full bg-gray-100 dark:bg-neutral-800 px-2 py-0.5 text-xs"><%= @resources.size %></span>
      </a>
    </nav>
  </div>

  <%# Tab contents %>
  <div class="tab-content">
    <%# Overview tab %>
    <div id="overview-tab" class="tab-pane">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="rounded-lg border border-gray-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 p-6">
          <h3 class="text-lg font-semibold mb-4 text-gray-900 dark:text-gray-100">Configuration</h3>
          <dl class="space-y-3">
            <div>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Type de transport</dt>
              <dd class="mt-1 text-sm text-gray-900 dark:text-gray-100"><%= @mcp_server.transport_type.upcase %></dd>
            </div>
            <div>
              <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Endpoint</dt>
              <dd class="mt-1 text-sm text-gray-900 dark:text-gray-100 break-all"><%= @mcp_server.endpoint || @mcp_server.command %></dd>
            </div>
            <% if @mcp_server.last_connected_at %>
              <div>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Dernière connexion</dt>
                <dd class="mt-1 text-sm text-gray-900 dark:text-gray-100"><%= time_ago_in_words(@mcp_server.last_connected_at) %></dd>
              </div>
            <% end %>
            <% if @mcp_server.tags.present? %>
              <div>
                <dt class="text-sm font-medium text-gray-500 dark:text-gray-400">Tags</dt>
                <dd class="mt-1 flex flex-wrap gap-2">
                  <% @mcp_server.tags.split(',').each do |tag| %>
                    <span class="inline-flex items-center rounded-full bg-blue-100 dark:bg-blue-900/30 px-2 py-1 text-xs font-medium text-blue-800 dark:text-blue-400">
                      <%= tag.strip %>
                    </span>
                  <% end %>
                </dd>
              </div>
            <% end %>
          </dl>
        </div>

        <% if @mcp_server.notes.present? %>
          <div class="rounded-lg border border-gray-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 p-6">
            <h3 class="text-lg font-semibold mb-4 text-gray-900 dark:text-gray-100">Notes</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400 whitespace-pre-wrap"><%= @mcp_server.notes %></p>
          </div>
        <% end %>
      </div>
    </div>

    <%# Tools tab %>
    <div id="tools-tab" class="tab-pane hidden">
      <% if @tools.any? %>
        <div class="grid grid-cols-1 gap-4">
          <% @tools.each do |tool| %>
            <div class="rounded-lg border border-gray-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 p-6">
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100"><%= tool.name %></h4>
                  <p class="mt-2 text-sm text-gray-600 dark:text-gray-400"><%= tool.description %></p>

                  <% if tool.respond_to?(:input_schema) && tool.input_schema %>
                    <div class="mt-4">
                      <p class="text-xs font-medium text-gray-500 dark:text-gray-400 mb-2">Paramètres :</p>
                      <pre class="text-xs bg-gray-50 dark:bg-neutral-900 p-3 rounded overflow-x-auto"><%= JSON.pretty_generate(tool.input_schema) %></pre>
                    </div>
                  <% end %>
                </div>
                <button class="ml-4 rounded-lg bg-blue-600 hover:bg-blue-700 px-4 py-2 text-sm font-semibold text-white shadow-sm transition-colors">
                  Essayer
                </button>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <div class="text-center py-12 text-gray-500 dark:text-gray-400">
          <p>Aucun tool disponible</p>
        </div>
      <% end %>
    </div>

    <%# Prompts tab %>
    <div id="prompts-tab" class="tab-pane hidden">
      <% if @prompts.any? %>
        <div class="grid grid-cols-1 gap-4">
          <% @prompts.each do |prompt| %>
            <div class="rounded-lg border border-gray-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 p-6">
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100"><%= prompt.name %></h4>
                  <p class="mt-2 text-sm text-gray-600 dark:text-gray-400"><%= prompt.description %></p>

                  <% if prompt.respond_to?(:arguments) && prompt.arguments&.any? %>
                    <div class="mt-4">
                      <p class="text-xs font-medium text-gray-500 dark:text-gray-400 mb-2">Variables :</p>
                      <div class="space-y-1">
                        <% prompt.arguments.each do |arg| %>
                          <div class="text-xs">
                            <span class="font-mono bg-gray-50 dark:bg-neutral-900 px-2 py-1 rounded"><%= arg[:name] %></span>
                            <% if arg[:required] %>
                              <span class="text-red-600 dark:text-red-400">*</span>
                            <% end %>
                            <span class="text-gray-500 dark:text-gray-400">- <%= arg[:description] %></span>
                          </div>
                        <% end %>
                      </div>
                    </div>
                  <% end %>
                </div>
                <button class="ml-4 rounded-lg bg-blue-600 hover:bg-blue-700 px-4 py-2 text-sm font-semibold text-white shadow-sm transition-colors">
                  Essayer
                </button>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <div class="text-center py-12 text-gray-500 dark:text-gray-400">
          <p>Aucun prompt disponible</p>
        </div>
      <% end %>
    </div>

    <%# Resources tab %>
    <div id="resources-tab" class="tab-pane hidden">
      <% if @resources.any? %>
        <div class="grid grid-cols-1 gap-4">
          <% @resources.each do |resource| %>
            <div class="rounded-lg border border-gray-200 dark:border-neutral-700 bg-white dark:bg-neutral-800 p-6">
              <h4 class="text-lg font-semibold text-gray-900 dark:text-gray-100"><%= resource.uri %></h4>
              <p class="mt-2 text-sm text-gray-600 dark:text-gray-400"><%= resource.description %></p>
              <% if resource.respond_to?(:mime_type) %>
                <p class="mt-2 text-xs text-gray-500 dark:text-gray-400">Type : <%= resource.mime_type %></p>
              <% end %>
            </div>
          <% end %>
        </div>
      <% else %>
        <div class="text-center py-12 text-gray-500 dark:text-gray-400">
          <p>Aucune resource disponible</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
document.addEventListener('turbo:load', () => {
  // Tab switching logic
  document.querySelectorAll('[data-action*="mcp-server#showTab"]').forEach(tab => {
    tab.addEventListener('click', (e) => {
      e.preventDefault()
      const tabName = e.currentTarget.dataset.tab

      // Update tab styles
      document.querySelectorAll('.mcp-tab').forEach(t => {
        t.classList.remove('active', 'border-green-500', 'text-green-600', 'dark:text-green-400')
        t.classList.add('border-transparent', 'text-gray-500', 'dark:text-gray-400')
      })
      e.currentTarget.classList.add('active', 'border-green-500', 'text-green-600', 'dark:text-green-400')
      e.currentTarget.classList.remove('border-transparent', 'text-gray-500', 'dark:text-gray-400')

      // Show/hide tab panes
      document.querySelectorAll('.tab-pane').forEach(pane => {
        pane.classList.add('hidden')
      })
      document.getElementById(`${tabName}-tab`).classList.remove('hidden')
    })
  })
})
</script>
